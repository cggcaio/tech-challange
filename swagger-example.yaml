openapi: 3.0.0
info:
  title: API de Exemplo
  description: Esta é uma API de exemplo para testar o ambiente gerado.
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
paths:
  /users:
    get:
      summary: Lista todos os usuários
      description: Retorna uma lista de usuários.
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Cria um novo usuário
      description: Adiciona um novo usuário.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: Usuário criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      summary: Obtém um usuário
      description: Retorna um único usuário pelo ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuário não encontrado
  /orders:
    get:
      summary: Lista todos os pedidos
      description: Retorna uma lista de pedidos.
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Cria um novo pedido
      description: Adiciona um novo pedido.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewOrder'
      responses:
        '201':
          description: Pedido criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /orders/{id}:
    get:
      summary: Obtém um pedido
      description: Retorna um único pedido pelo ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Pedido não encontrado
  /products:
    get:
      summary: Lista todos os produtos
      description: Retorna uma lista de produtos.
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /products/{id}:
    get:
      summary: Obtém um produto
      description: Retorna um único produto pelo ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Produto não encontrado
  /categories:
    get:
      summary: Lista todas as categorias
      description: Retorna uma lista de categorias.
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
    NewUser:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
    Order:
      type: object
      properties:
        id:
          type: string
        productId:
          type: string
        quantity:
          type: integer
    NewOrder:
      type: object
      properties:
        productId:
          type: string
        quantity:
          type: integer
    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
          format: float
    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
